{
	"info": {
		"_postman_id": "71d8c243-a867-4902-bc00-2f2cdd3e6e4d",
		"name": "EOCS-T1661",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1555972"
	},
	"item": [
		{
			"name": "Step 1-System Login with special user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"   pm.test(\"System is not reachable\", () =>{\r",
							"    if(pm.response.code!==200)\r",
							"{postman.setNextRequest(null)}\r",
							"});\r",
							" \r",
							"    const response = pm.response.json()\r",
							"\r",
							"//We are checking here if we logged in successfully and the response is as expected\r",
							"pm.test(\"Login is successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(response).to.be.an(\"object\")\r",
							"    pm.expect(response).to.have.any.keys('authProfileId')\r",
							"    pm.expect(response).to.have.any.keys('needPWChange')\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"ApiTestUser\",\"password\":\"ApiTestUser\"}"
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/login",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"login"
					]
				},
				"description": "Please do not delete \"system\" variable. Just update it with the system you are testing in EOCS-T1661 folder Variables tab like in the picture.\n\n<img src=\"https://content.pstmn.io/6eaba942-7f7c-44ce-9995-c8193ab0ca19/aW1hZ2UucG5n\" alt=\"Variables%20of%20collection\">\n\nWith this request, we are logging with special user. **In this request, I used BAO user but you can change it in Body tab as in the picture.**\n\n<img src=\"https://content.pstmn.io/4f215a7f-edfc-4c90-a453-005e96bb436a/aW1hZ2UucG5n\" alt=\"Special%20user%20config\">\n\nIf you get 403 status code, you should select default auth profile for special user you are using.\n\nIf you get 400 status code, you should first logout. Just send Extra Step -Logout from System request."
			},
			"response": []
		},
		{
			"name": "Step 2.1-Create Incident",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"incidentId\", pm.response.json().id)\r",
							"\r",
							"pm.collectionVariables.set(\"incidentNumber\", pm.response.json().number)\r",
							"pm.test(\"Incident \"+pm.collectionVariables.get(\"incidentNumber\")+\" is created\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/incidents",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"incidents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 2-Set Password with special user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Password is set to Incident \" +pm.collectionVariables.get(\"incidentNumber\"), function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.get(\"incidentId\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\"password\"",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/eiti/incidents/:incidentID/setPasswordDigest",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"eiti",
						"incidents",
						":incidentID",
						"setPasswordDigest"
					],
					"variable": [
						{
							"key": "incidentID",
							"value": "{{incidentId}}"
						}
					]
				},
				"description": "**Please do not delete \"system\" and \"IncidentID\" variables. Just update them in EOCS-T1661 directory in Variables tab.**\n\n**We are setting password to Incident with special user.**\n\nYou should get first Incident Id.\n\nYou can find Incident Id from devtools or Kibana.\n\nIf you open and close incident detail in layer 3 (detail layer) and track network with devtools, you will get this traffic and find id in \"close\" action.\n\n<img src=\"https://content.pstmn.io/0ea93e75-e32e-4edc-b5de-73085f1fe0bd/aW1hZ2UucG5n\" alt=\"Incident%20Id%20in%20devtools\">\n\nOr you can search Incident with the user who created Incident and the time when it is created from incident index in Kibana.\n\n<img src=\"https://content.pstmn.io/c78c4875-3812-4a75-aa94-358b409a7b86/aW1hZ2UucG5n\" alt=\"Kibana\">\n\nYou can cross check the logs with number of Incident. **I used PPH/230601/320702 for this request.**\n\n**We are checking if we can set password to the Incident. You can add any password you like in Bosy tab of this request but do not remove quotes. \"\"**\n\nIf you get 401 status code, you need to login again with first request."
			},
			"response": []
		},
		{
			"name": "Step 3-Delete Password with special user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Password is deleted of Incident \" +pm.collectionVariables.get(\"incidentNumber\"), function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/eiti/incidents/:incidentId/deletePassword",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"eiti",
						"incidents",
						":incidentId",
						"deletePassword"
					],
					"variable": [
						{
							"key": "incidentId",
							"value": "{{incidentId}}"
						}
					]
				},
				"description": "**Please do not delete \"system\" and \"IncidentID\" variables. Just update them in EOCS-T1661 directory in Variables tab.**\n\nWe are checking if special user can delete password of the incident.\n\nIf you get 401 status code, you need to login again with first request."
			},
			"response": []
		},
		{
			"name": "Step 3 -Logout from System with Special User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"You logged out successfuly\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/logout",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"logout"
					]
				},
				"description": "This request for logging out. You should see 200 OK status code.\n\nWe are logging out because other user should logged in in the next request."
			},
			"response": []
		},
		{
			"name": "Step 4-System Login with unspecial user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()\r",
							"\r",
							"//We are checking here if we logged in successfully and the response is as expected\r",
							"pm.test(\"Login is successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(response).to.be.an(\"object\")\r",
							"    pm.expect(response).to.have.any.keys('authProfileId')\r",
							"    pm.expect(response).to.have.any.keys('needPWChange')\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"apiNormalTestUser\",\"password\":\"apiNormalTestUser\"}"
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/login",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"login"
					]
				},
				"description": "We are checking here if we logged in with unspecial successfuly and the response is as expected.\n\n**Please update the following data in Body tab of this request with your unspecial user data.**\n\n<img src=\"https://content.pstmn.io/4b84bdf2-59a6-47d8-9dd7-f7e8f4dd94dd/aW1hZ2UucG5n\">\n\nIf you get 403 status code, it means your unspecial user does not have default auth profile. Just assign one in admin.\n\nIf you get 400 status code, it means other user still logged in, you should logout first. Just send \"Extra Step -Logout from System\" request."
			},
			"response": []
		},
		{
			"name": "Step 5-Set Password with unspecial user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//We are checking if we can not set password with with unspecial user.\r",
							"pm.test(\"Status is code is not 200 and operation is not possible with unspecial user\", function () {\r",
							"    pm.expect(pm.response.code).not.to.eql(200);\r",
							"    pm.expect(pm.response.json().error).to.eql(\"Access Denied Error\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.get(\"incidentId\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"password\": \"digest\"}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/eiti/incidents/:incidentId/setPasswordDigest",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"eiti",
						"incidents",
						":incidentId",
						"setPasswordDigest"
					],
					"variable": [
						{
							"key": "incidentId",
							"value": "{{incidentId}}"
						}
					]
				},
				"description": "**Please do not delete \"system\" and \"IncidentID\" variables. Just update them in EOCS-T1661 directory in Variables tab.**\n\nWe are checking if our unspecial can not set password to the incident.\n\nIf you get 401 status code, you need to login again with first request."
			},
			"response": []
		},
		{
			"name": "Step 6-Delete Password with unspecial user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//We are checking if we can not delete password with with unspecial user.\r",
							"pm.test(\"Status is code is not 200 and operation is not possible with unspecial user\", function () {\r",
							"    pm.expect(pm.response.code).not.to.eql(200);\r",
							"    pm.expect(pm.response.json().error).to.eql(\"Access Denied Error\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/eiti/incidents/:incidentId/deletePassword",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"eiti",
						"incidents",
						":incidentId",
						"deletePassword"
					],
					"variable": [
						{
							"key": "incidentId",
							"value": "{{incidentId}}"
						}
					]
				},
				"description": "**Please do not delete \"system\" and \"IncidentID\" variables. Just update them in EOCS-T1661 directory in Variables tab.**\n\nWe are checking if our unspecial user can not send \"delete\" password request of the incident.\n\nIf you get 401 status code, you need to login again with first request."
			},
			"response": []
		},
		{
			"name": "Step 6 -Logout from System",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"You logged out successfuly\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"     \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/logout",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"logout"
					]
				},
				"description": "This request for logging out. You should see 200 OK status code."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "system",
			"value": "master",
			"disabled": true
		},
		{
			"key": "incidentId",
			"value": "49d974fc-8ea8-42d8-8159-087439a8e4ed"
		},
		{
			"key": "incidentNumber",
			"value": ""
		}
	]
}