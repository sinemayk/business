{
	"info": {
		"_postman_id": "46300ce6-9905-4794-a657-b83c78b03902",
		"name": "EOCS-53919/EOCS-T4086 (1.0)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1555972",
		"_collection_link": "https://interstellar-eocs.postman.co/workspace/eOCS~866d5192-de97-49ec-82d3-4bd25296b0f1/collection/1555972-46300ce6-9905-4794-a657-b83c78b03902?action=share&source=collection_link&creator=1555972"
	},
	"item": [
		{
			"name": "System Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()\r",
							"\r",
							"//We are checking here if we logged in successfully and the response is as expected\r",
							"pm.test(\"Login is successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(response).to.be.an(\"object\")\r",
							"    pm.expect(response).to.have.any.keys('authProfileId')\r",
							"    pm.expect(response).to.have.any.keys('needPWChange')\r",
							"});\r",
							"\r",
							"//If we get 403 status code, it means we do not have default auth profile\r",
							"pm.test('Check Status 403', () => {\r",
							"    if(pm.response.code === 403) {\r",
							"        console.log(\"You should set Default Authorization Profile of user first\")\r",
							"    }\r",
							"})\r",
							"\r",
							"//If we get 400 status code, it means you should logout first\r",
							"pm.test('Check Status 400', () => {\r",
							"    if(pm.response.code === 400) {\r",
							"        pm.sendRequest(\"Step 3-Logout from System\")\r",
							"        console.log(\"You should logout first\")\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"skirtactest\",\"password\":\"skirtactest\"}"
				},
				"url": {
					"raw": "https://master-main.apps.ef-dev.at/api/login",
					"protocol": "https",
					"host": [
						"master-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"login"
					]
				},
				"description": "Please do not delete {{system}} variable. Just update it with the system you are testing in EOCS-T1440 folder Variables tab like in the picture.\n\n<img src=\"https://content.pstmn.io/6eaba942-7f7c-44ce-9995-c8193ab0ca19/aW1hZ2UucG5n\" alt=\"Variables%20of%20collection\" height=\"262\" width=\"790\">\n\nWith this request, we are logging with special user. In this request, I used BAO user but you can change it in Body tab as in the picture.\n\n<img src=\"https://content.pstmn.io/4f215a7f-edfc-4c90-a453-005e96bb436a/aW1hZ2UucG5n\" alt=\"Special%20user%20config\" width=\"643\" height=\"230\">\n\nIf you get 403 status code, you should select default auth profile for special user you are using.\n\nIf you get 400 status code, you should first logout. Just send Step 3-Logout from System request."
			},
			"response": []
		},
		{
			"name": "Get Keywords",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(pm.response.json().elements.length)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://master-main.apps.ef-dev.at/api/keywords?forceReadFromDb=true&page=0",
					"protocol": "https",
					"host": [
						"master-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"keywords"
					],
					"query": [
						{
							"key": "forceReadFromDb",
							"value": "true"
						},
						{
							"key": "page",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Persons",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(pm.response.json().elements.length)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://master-main.apps.ef-dev.at/api/persons?forceReadFromDb=true&page=0",
					"protocol": "https",
					"host": [
						"master-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"persons"
					],
					"query": [
						{
							"key": "forceReadFromDb",
							"value": "true"
						},
						{
							"key": "page",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Vehicles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(pm.response.json().elements.length)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://master-main.apps.ef-dev.at/api/vehicles?forceReadFromDb=true&page=5",
					"protocol": "https",
					"host": [
						"master-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"vehicles"
					],
					"query": [
						{
							"key": "forceReadFromDb",
							"value": "true"
						},
						{
							"key": "page",
							"value": "5"
						}
					]
				}
			},
			"response": []
		}
	]
}