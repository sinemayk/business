{
	"info": {
		"_postman_id": "e4810f28-475f-4656-82df-f771235bf5f9",
		"name": "EOCS-T1659",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1555972"
	},
	"item": [
		{
			"name": "Step 1-System Login with special user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"  pm.test(\"System is not reachable\", () =>{\r",
							"    if(pm.response.code!==200)\r",
							"{postman.setNextRequest(null)}\r",
							"});\r",
							"\r",
							"    const response = pm.response.json()\r",
							"\r",
							"//We are checking here if we logged in successfully and the response is as expected\r",
							"pm.test(\"Login is successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(response).to.be.an(\"object\")\r",
							"    pm.expect(response).to.have.any.keys('authProfileId')\r",
							"    pm.expect(response).to.have.any.keys('needPWChange')\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"ApiTestUser\",\"password\":\"ApiTestUser\"}"
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/login",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"login"
					]
				},
				"description": "Please do not delete \"system\" variable. Just update it with the system you are testing in EOCS-T1659 folder Variables tab like in the picture.\n\n<img src=\"https://content.pstmn.io/6eaba942-7f7c-44ce-9995-c8193ab0ca19/aW1hZ2UucG5n\" alt=\"Variables%20of%20collection\">\n\nWith this request, we are logging with special user. **In this request, I used BAO user but you can change it in Body tab as in the picture.**\n\n<img src=\"https://content.pstmn.io/4f215a7f-edfc-4c90-a453-005e96bb436a/aW1hZ2UucG5n\" alt=\"Special%20user%20config\">\n\nIf you get 403 status code, you should select default auth profile for special user you are using.\n\nIf you get 400 status code, you should first logout. Just send Extra Step -Logout from System request."
			},
			"response": []
		},
		{
			"name": "Step 2.1-Create Incident",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"incidentId\", pm.response.json().id)\r",
							"\r",
							"pm.collectionVariables.set(\"incidentNumber\", pm.response.json().number)\r",
							"pm.test(\"Incident \"+pm.collectionVariables.get(\"incidentNumber\")+\" is created\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/incidents",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"incidents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 2.2-Set Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Password is set to Incident \" +pm.collectionVariables.get(\"incidentNumber\"), function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"newPassword\": \"123\",\r\n  \"hint\": \"\",\r\n  \"oldPassword\": null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/incidents/:incidentId/setPassword",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"incidents",
						":incidentId",
						"setPassword"
					],
					"variable": [
						{
							"key": "incidentId",
							"value": "{{incidentId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 2.3-Get Vehicle",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"vehicleId\", pm.response.json().elements[0].id)\r",
							"pm.collectionVariables.set(\"vehicleName\", pm.response.json().elements[0].displayName)\r",
							"\r",
							"pm.test(\"Special user will use this vehicle-> \" +pm.collectionVariables.get(\"vehicleName\"), function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/vehicles?ermSearch=true&allocationStatus%5B0%5D=FREE&statusId%5B0%5D=9be806aa-cbc7-4294-831e-13c0eec99df2&startRow=0&size=50&sort=allocationStatus%3Adesc",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"vehicles"
					],
					"query": [
						{
							"key": "ermSearch",
							"value": "true"
						},
						{
							"key": "allocationStatus%5B0%5D",
							"value": "FREE"
						},
						{
							"key": "statusId%5B0%5D",
							"value": "9be806aa-cbc7-4294-831e-13c0eec99df2"
						},
						{
							"key": "startRow",
							"value": "0"
						},
						{
							"key": "size",
							"value": "50"
						},
						{
							"key": "sort",
							"value": "allocationStatus%3Adesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 2.4-Allocate Resource with special user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//We are checking if our resource is allocated or not.\r",
							"pm.test(pm.collectionVariables.get(\"vehicleName\") +\" is allocated\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"/*const postRequest = {\r",
							"  url: 'https://master-main.apps.ef-dev.at/api/login',\r",
							"  method: 'POST',\r",
							"  body: {\r",
							"      username:'BAO',\r",
							"      password:'BAO'}\r",
							"};\r",
							"pm.sendRequest(postRequest, function (err, response) {\r",
							"    console.log(response.json());\r",
							"});*/\r",
							"\r",
							"pm.collectionVariables.get(\"vehicleId\")\r",
							"pm.collectionVariables.get(\"incidentId\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"resourceIds\": [\r\n        \"{{vehicleId}}\"\r\n    ],\r\n    \"incidentId\": \"{{incidentId}}\"\r\n}"
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/incidents/:incidentId/allocatedResources/multiple",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"incidents",
						":incidentId",
						"allocatedResources",
						"multiple"
					],
					"variable": [
						{
							"key": "incidentId",
							"value": "{{incidentId}}"
						}
					]
				},
				"description": "**Please do not delete \"system\" and \"IncidentID\" variables. Just update them in EOCS-T1659 Variables tab.**\n\n**We are allocating a FREE resource to protected Incident with special user.**\n\nYou should get first Incident Id and resource id from the system.\n\nIn this request, i used existing protected incident and free vehicle.\n\nYou can find Incident Id from devtools or Kibana.\n\nIf you open and close incident detail in layer 3 (detail layer) and track network with devtools, you will get this traffic and find id in \"close\" action.\n\n<img src=\"https://content.pstmn.io/0ea93e75-e32e-4edc-b5de-73085f1fe0bd/aW1hZ2UucG5n\" alt=\"Incident%20Id%20in%20devtools\" width=\"1163\" height=\"698\">\n\nOr you can search Incident with the user who created Incident and the time when it is created from incident index in Kibana.\n\n<img src=\"https://content.pstmn.io/c78c4875-3812-4a75-aa94-358b409a7b86/aW1hZ2UucG5n\" alt=\"Kibana\" width=\"1507\" height=\"251\">\n\nYou can cross check the logs with number of Incident.\n\nYou can find resource id when you open it in detail in admin as following.\n\n<img src=\"https://content.pstmn.io/4802363e-4b20-4150-ac19-81a9834e5ce3/aW1hZ2UucG5n\" alt=\"Resource%20id%20from%20admin\" width=\"914\" height=\"191\">\n\n**After you have Incident ID and resource ID, you need update these values in Body tab of this request. (For incident ID you also need to update it in EOCS-T1659 directory- variables tab)**\n\n<img src=\"https://content.pstmn.io/248968f0-5c03-4fde-938b-0f0596f9f7da/aW1hZ2UucG5n\" alt=\"Body%20tab%20of%20request\" width=\"860\" height=\"272\">\n\nWe are checking if our resource is allocated or not.\n\nIf you get 401 status code, you need to login again with first request."
			},
			"response": []
		},
		{
			"name": "Step 3-Alert Resource with special user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//We are checking if our allocated resource is alerted or not.\r",
							"pm.test(pm.collectionVariables.get(\"vehicleName\") +\" is alerted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"resourceIds\":[\"{{vehicleId}}\"],\"incidentId\":\"{{incidentId}}\"}\r\n"
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/incidents/:incidentId/allocatedResources/alarm",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"incidents",
						":incidentId",
						"allocatedResources",
						"alarm"
					],
					"variable": [
						{
							"key": "incidentId",
							"value": "{{incidentId}}"
						}
					]
				},
				"description": "**Please do not delete \"system\" and \"IncidentID\" variables. Just update them in EOCS-T1659 directory in Variables tab.**\n\n**We are alerting our allocated resource to protected Incident with special user.**\n\nYou should use Incident Id and resource id from Step 2.\n\n**After you have Incident ID and resource ID, you need update these values in Body tab of this request.**\n\nWe are checking if our allocated resource is alerted or not.\n\nIf you get 401 status code, you need to login again with first request."
			},
			"response": []
		},
		{
			"name": "Step 4-Deallocate Resource with special user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//We are checking if our alerted resource is deallocated or not.\r",
							"pm.test(pm.collectionVariables.get(\"vehicleName\") + \" is deallocated\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"resourceIds\":[\"{{vehicleId}}\"],\"incidentId\":\"{{incidentId}}\"}"
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/incidents/:incidentId/allocatedResources/deallocate/multiple",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"incidents",
						":incidentId",
						"allocatedResources",
						"deallocate",
						"multiple"
					],
					"variable": [
						{
							"key": "incidentId",
							"value": "{{incidentId}}"
						}
					]
				},
				"description": "**Please do not delete \"system\" and \"IncidentID\" variables. Just update them in EOCS-T1659 directory in Variables tab.**\n\n**We are deallocating our alerted resource from protected Incident with special user.**\n\nYou should use Incident Id and resource id from previous request.\n\n**After you have Incident ID and resource ID, you need update these values in Body tab of this request.**\n\nWe are checking if our alerted resource is deallocated or not.\n\nIf you get 401 status code, you need to login again with first request."
			},
			"response": []
		},
		{
			"name": "Step 5-Reserve Resource with special user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.get(\"vehicleId\")\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//We are checking if our resource is reserved or not.\r",
							"pm.test(pm.collectionVariables.get(\"vehicleName\")+\" is reserved\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{  \"resourceId\": \"{{vehicleId}}\",\r\n    \"incidentId\": \"{{incidentId}}\",\r\n    \"startTime\":        \"2040-07-05T11:40:00.000Z\",\r\n    \"endTime\":          \"2040-07-05T11:42:00.000Z\",\r\n    \"reservationTime\":  \"2040-07-05T11:40:00.000Z\",\r\n    \"notificationTime\": \"2040-07-05T11:40:00.000Z\"\r\n}]\r\n//NOTE: time in format: YYYY-MM-DDTHH:MM:SSZ"
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/resourcereservations",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"resourcereservations"
					]
				},
				"description": "**Please do not delete \"system\" and \"IncidentID\" variables. Just update them in EOCS-T1659 directory in Variables tab.**\n\n**We are reserving our resource to protected Incident with special user.**\n\nYou should use Incident Id and resource id from previous request.\n\n**After you have Incident ID and resource ID, you need update these values in Body tab of this request.**\n\nYou also need to update time values in Body tab.\n\n<img src=\"https://content.pstmn.io/049c431a-f425-480a-bcf7-9e11810dbba0/aW1hZ2UucG5n\" alt=\"The%20values%20need%20to%20be%20updated\" width=\"609\" height=\"444\">\n\nWe are checking if our resource is reserved or not.\n\nIf you get 401 status code, you need to login again with first request."
			},
			"response": []
		},
		{
			"name": "Extra Step -Logout from System Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"You logged out successfuly\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Retry-After",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/logout",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"logout"
					]
				},
				"description": "This request for logging out. You should see 200 OK status code."
			},
			"response": []
		},
		{
			"name": "Step 6-System Login with unspecial user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()\r",
							"\r",
							"//We are checking here if we logged in successfuly and the response is as expected\r",
							"pm.test(\"Login is successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(response).to.be.an(\"object\")\r",
							"    pm.expect(response).to.have.any.keys('authProfileId')\r",
							"    pm.expect(response).to.have.any.keys('needPWChange')\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){}, [2000]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Retry-After",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"apiNormalTestUser\",\"password\":\"apiNormalTestUser\"}"
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/login",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"login"
					]
				},
				"description": "We are checking here if we logged in with unspecial successfuly and the response is as expected.\n\n**Please update the following data in Body tab of this request with your unspecial user data.**\n\n<img src=\"https://content.pstmn.io/4b84bdf2-59a6-47d8-9dd7-f7e8f4dd94dd/aW1hZ2UucG5n\" alt=\"\" height=\"164\" width=\"652\">\n\nIf you get 403 status code, it means your unspecial user does not have default auth profile. Just assign one in admin.\n\nIf you get 400 status code, it means other user still logged in, you should logout first. Just send \"Extra Step -Logout from System\" request."
			},
			"response": []
		},
		{
			"name": "Step 7.1-Get Vehicle",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"vehicleId2\", pm.response.json().elements[0].id)\r",
							"pm.collectionVariables.set(\"vehicleName2\", pm.response.json().elements[0].displayName)\r",
							"\r",
							"pm.test(\"Unspecial user will use this vehicle-> \" +pm.collectionVariables.get(\"vehicleName2\"), function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/vehicles?ermSearch=true&allocationStatus%5B0%5D=FREE&statusId%5B0%5D=9be806aa-cbc7-4294-831e-13c0eec99df2&startRow=0&size=50&sort=allocationStatus%3Adesc",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"vehicles"
					],
					"query": [
						{
							"key": "ermSearch",
							"value": "true"
						},
						{
							"key": "allocationStatus%5B0%5D",
							"value": "FREE"
						},
						{
							"key": "statusId%5B0%5D",
							"value": "9be806aa-cbc7-4294-831e-13c0eec99df2"
						},
						{
							"key": "startRow",
							"value": "0"
						},
						{
							"key": "size",
							"value": "50"
						},
						{
							"key": "sort",
							"value": "allocationStatus%3Adesc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 7-Allocate Resource with unspecial user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//We are checking if our resource is not allocated with unspecial user.\r",
							"pm.test(\"Status is code is not 200 and operation is not possible with unspecial user\", function () {\r",
							"    pm.expect(pm.response.code).not.to.eql(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"/*const postRequest = {\r",
							"  url: 'https://master-main.apps.ef-dev.at/api/login',\r",
							"  method: 'POST',\r",
							"  body: {\r",
							"      username:'skirtactest',\r",
							"      password:'skirtactest'}\r",
							"};\r",
							"pm.sendRequest(postRequest, function (err, response) {\r",
							"    console.log(response.json());\r",
							"});*/\r",
							"\r",
							"pm.collectionVariables.get(\"vehicleId2\")\r",
							"pm.collectionVariables.get(\"incidentId\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"resourceIds\": [\r\n        \"{{vehicleId2}}\"\r\n    ],\r\n    \"incidentId\": \"{{incidentId}}\"\r\n}"
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/incidents/:incidentId/allocatedResources/multiple",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"incidents",
						":incidentId",
						"allocatedResources",
						"multiple"
					],
					"variable": [
						{
							"key": "incidentId",
							"value": "{{incidentId}}"
						}
					]
				},
				"description": "**Please do not delete \"system\" and \"IncidentID\" variables. Just update them in EOCS-T1659 directory in Variables tab.**\n\nYou should get Incident Id and resource id from the previous request.\n\n**After you have Incident ID and resource ID, you need update these values in Body tab of this request.**\n\nWe are checking if our resource is not allocated with unspecial user.\n\nIf you get 401 status code, you need to login again with first request."
			},
			"response": []
		},
		{
			"name": "Step 8-Alert Resource  with unspecial user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//We are checking if our resource is not alerted with unspecial user.\r",
							"pm.test(\"Status is code is not 200 and operation is not possible with unspecial user\", function () {\r",
							"    pm.expect(pm.response.code).not.to.eql(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"resourceIds\":[\"{{vehicleId2}}\"],\"incidentId\":\"{{incidentId}}\"}"
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/incidents/:incidentId/allocatedResources/alarm",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"incidents",
						":incidentId",
						"allocatedResources",
						"alarm"
					],
					"variable": [
						{
							"key": "incidentId",
							"value": "{{incidentId}}"
						}
					]
				},
				"description": "**Please do not delete \"system\" and \"IncidentID\" variables. Just update them in EOCS-T1659 directory in Variables tab.**\n\nYou should use Incident Id and resource id from previous step.\n\n**After you have Incident ID and resource ID, you need update these values in Body tab of this request.**\n\nWe are checking if our resource is not alerted with unspecial user.\n\nIf you get 401 status code, you need to login again with first request."
			},
			"response": []
		},
		{
			"name": "Step 10-Reserve Resource with unspecial user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//We are checking if our resource is not reserved with unspecial user.\r",
							"pm.test(\"Status is code is not 200 and operation is not possible with unspecial user\", function () {\r",
							"    pm.expect(pm.response.code).not.to.eql(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{  \"resourceId\": \"{{vehicleId2}}\",\r\n    \"incidentId\": \"{{incidentId}}\",\r\n    \"startTime\":        \"2040-08-01T11:39:00.000Z\",\r\n    \"endTime\":          \"2040-08-02T11:43:00.000Z\",\r\n    \"reservationTime\":  \"2040-08-01T11:39:00.000Z\",\r\n    \"notificationTime\": \"2040-08-01T11:39:00.000Z\"\r\n}]\r\n\r\n//NOTE: time in format: YYYY-MM-DDTHH:MM:SSZ"
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/resourcereservations",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"resourcereservations"
					]
				},
				"description": "**Please do not delete \"system\" and \"IncidentID\" variables. Just update them in EOCS-T1659 directory in Variables tab.**\n\nYou should use Incident Id and resource id from previous request.\n\n**After you have Incident ID and resource ID, you need update these values in Body tab of this request.**\n\nYou also need to update time values in Body tab.\n\n<img src=\"https://content.pstmn.io/e75b74c7-f10d-47b4-9ac3-da05c6867c28/aW1hZ2UucG5n\" width=\"606\" height=\"388\">\n\nWe are checking if our resource is not reserved with unspecial user.\n\nIf you get 401 status code, you need to login again with first request."
			},
			"response": []
		},
		{
			"name": "Extra Step -Logout from System",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"You logged out successfuly\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Retry-After",
						"value": "3600",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{system}}-main.apps.ef-dev.at/api/logout",
					"protocol": "https",
					"host": [
						"{{system}}-main",
						"apps",
						"ef-dev",
						"at"
					],
					"path": [
						"api",
						"logout"
					]
				},
				"description": "This request for logging out. You should see 200 OK status code."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "system",
			"value": "master",
			"disabled": true
		},
		{
			"key": "vehicleId",
			"value": ""
		},
		{
			"key": "vehicleName",
			"value": ""
		},
		{
			"key": "vehicleId2",
			"value": ""
		},
		{
			"key": "vehicleName2",
			"value": ""
		},
		{
			"key": "incidentId",
			"value": "",
			"type": "string"
		},
		{
			"key": "incidentNumber",
			"value": ""
		}
	]
}